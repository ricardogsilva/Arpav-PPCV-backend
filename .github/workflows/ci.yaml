# This workflow does not use the `github.actor` and `secrets.GITHUB_TOKEN` variables
# The reason for it that we want to be able to have this workflow dispatching the workflow
# workflow specified in `deployment.yaml` and as documented at:
#
# https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#triggering-a-workflow-from-a-workflow
#
# github does not allow a workflow run to trigger other workflows when the `secrets.GITHUB_TOKEN`
# variable is used in the calling workflow.

name: CI

run-name: ${{ github.event.schedule && 'Routine vulnerability scan' || 'Continuous Integration' }}

on:
  push:

  pull_request:

  schedule:
    - cron: "30 12 * * *"  # runs everyday at 12h30

env:
  PUBLISH_IMAGE: ${{ (github.ref_name == 'main' || github.ref_type == 'tag') && 'TRUE' || 'FALSE'}}
  IMAGE_TAG: ${{ github.ref_name == 'main' && 'latest' || github.ref_name }}
  IMAGE_NAME: ghcr.io/${{ github.repository }}/arpav-ppcv-backend

jobs:
  run-dagger-ci:
    runs-on: ubuntu-22.04
    steps:

      - name: grab code
        uses: actions/checkout@v4

      - name: setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"
          cache: pip
          cache-dependency-path: docker/backend/project_requirements.txt

      - name: setup poetry
        uses: Gr1N/setup-poetry@v9
        with:
          poetry-version: "1.7.1"

      - name: install code with dev dependencies
        run: poetry install --with dev

      - name: generate github app access token
        id: generate-github-app-installation-access-token
        uses: jamestrousdale/github-app-jwt-token@0.1.4
        with:
          app-id: ${{ vars.DEPLOYER_APP_ID }}
          private-key: ${{ secrets.LOGIN_DEPLOYER_PRIVATE_KEY }}

      - name: login to container registry
        if: ${{ env.PUBLISH_IMAGE == 'TRUE' }}
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ vars.DEPLOYER_APP_ID }}
          password: ${{ steps.generate-github-app-installation-access-token.outputs.access-token }}

      - name: run ci
        uses: dagger/dagger-for-github@v5
        with:
          verb: run
          # not including the `--with-linter` and `--with-formatter` flags yet,
          # in order to not break CI - we will fix linting and formatting errors
          # shortly
          args: >-
            poetry run python tests/ci/main.py 
            --git-commit ${{ github.sha }}
            --with-tests 
            ${{ env.PUBLISH_IMAGE == 'TRUE' && format('--publish-docker-image {0}:{1}', env.IMAGE_NAME, env.IMAGE_TAG)  || ''}}
          version: 0.9.9

      # Periodically scan built image for vulnerabilities
      - name: run security scanning
        if: ${{ github.event.schedule }}
        uses: dagger/dagger-for-github@v5
        with:
          verb: run
          args: poetry run python tests/ci/main.py --with-security-scan
          version: 0.9.9
